# test
name: version, tag and github release

on:
  workflow_run:
    workflows: ["tests"]
    branches: [main]
    types:
      - completed

jobs:
  release:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    permissions:
      contents: write
      actions: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - uses: pnpm/action-setup@v2
        with:
          version: 9
          run_install: false
      - name: Check if version already exists
        id: version-check
        run: |
          package_version=$(node -p "require('./package.json').version")
          exists=$(gh api repos/${{ github.repository }}/releases/tags/v$package_version >/dev/null 2>&1 && echo "true" || echo "")

          if [ -n "$exists" ];
          then
            echo "Version v$package_version already exists"
            echo "::warning file=package.json,line=1::Version v$package_version already exists - no release will be created. If you want to create a new release, please update the version in package.json and push again."
            echo "skipped=true" >> $GITHUB_OUTPUT
          else
            echo "Version v$package_version does not exist. Creating release..."
            echo "skipped=false" >> $GITHUB_OUTPUT
            echo "tag=v$package_version" >> $GITHUB_OUTPUT
          fi
        # gh will automatically use the GITHUB_TOKEN provided by the workflow
      - name: Setup git
        if: ${{ steps.version-check.outputs.skipped == 'false' }}
        env:
          GH_EMAIL: ${{ secrets.GH_EMAIL }}
          GH_USERNAME: ${{ secrets.GH_USERNAME }}
        run: |
          git config --global user.email "${GH_EMAIL:-${GITHUB_ACTOR}@users.noreply.github.com}"
          git config --global user.name "${GH_USERNAME:-${GITHUB_ACTOR}}"
      - name: Generate oclif README
        if: ${{ steps.version-check.outputs.skipped == 'false' }}
        id: oclif-readme
        run: |
          pnpm install
          pnpm exec oclif readme
          if [ -n "$(git status --porcelain)" ]; then
            git add .
            git commit -am "chore: update README.md"
            git push -u origin "${{ github.ref_name }}"
          fi
      - name: Create Github Release
        uses: ncipollo/release-action@2c591bcc8ecdcd2db72b97d6147f871fcd833ba5
        if: ${{ steps.version-check.outputs.skipped == 'false' }}
        with:
          name: ${{ steps.version-check.outputs.tag }}
          tag: ${{ steps.version-check.outputs.tag }}
          commit: ${{ github.ref_name }}
          skipIfReleaseExists: true
      - name: Trigger publish workflow
        if: ${{ steps.version-check.outputs.skipped == 'false' }}
        run: |
          curl -X POST https://api.github.com/repos/${{ github.repository }}/dispatches \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -d '{"event_type":"publish","client_payload":{"version":"${{ steps.version-check.outputs.tag }}"}}'
