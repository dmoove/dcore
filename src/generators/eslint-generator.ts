import { PackageJsonGenerator } from './package-json-generator.js';
import { GeneratorConfig, ToolGenerator } from './tool-generator.js';

export class EslintGenerator extends ToolGenerator {
  name = 'eslint';

  constructor(
    projectRoot: string,
    private readonly pkg?: PackageJsonGenerator
  ) {
    super(projectRoot);
  }

  async generate(config: GeneratorConfig): Promise<void> {
    const raw = (config.tools as Record<string, unknown> | undefined)?.eslint;
    const isObj = typeof raw === 'object' && raw !== null;
    const typed = isObj ? (raw as Record<string, unknown>) : {};

    const mode: 'flat' | 'legacy' =
      isObj && typeof typed.mode === 'string' && typed.mode === 'flat'
        ? 'flat'
        : 'legacy';
    const userConfig = isObj ? { ...typed } : {};
    delete (userConfig as Record<string, unknown>).mode;

    if (mode === 'flat') {
      const flatConfig = [
        {
          files: ['**/*.js', '**/*.ts'],
          languageOptions: {
            ecmaVersion: 'latest',
            sourceType: 'module',
          },
          rules: userConfig.rules ?? {},
        },
      ];
      const content = `/**
 * ESLint Flat Config generated by dcore
 */
export default ${JSON.stringify(flatConfig, null, 2)};`;

      await this.writeTextFile('eslint.config.js', content);
    } else {
      const merged = { ...this.getDefaultConfig(), ...userConfig };
      const content = `/**
 * ESLint legacy config (.eslintrc.cjs) generated by dcore
 */
export default ${JSON.stringify(merged, null, 2)};`;

      await this.writeTextFile('.eslintrc.cjs', content);
    }

    this.pkg?.addDevDependency('eslint', '^8.56.0');
  }

  protected override getDefaultConfig(): Record<string, unknown> {
    return {
      env: {
        es2020: true,
        node: true,
      },
      extends: ['eslint:recommended'],
      parserOptions: {
        ecmaVersion: 'latest',
        sourceType: 'module',
      },
      root: true,
      rules: {},
    };
  }

  shouldRun(config: GeneratorConfig): boolean {
    return Boolean(config.tools?.eslint);
  }
}
